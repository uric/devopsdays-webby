---
extension: html
filter:
- erb
- markdown
dirty: true
proposal: true
ignite: true
selected: false
layout: event
author: Birger Schmidt
title: "Use Flapjack as bridge between Ops and Dev, and bridge from Nagios towards more freedom"
---

**Abstract**

Flapjack is an alert umbrella for people that intelligently routes and
rolls up alerts, integrates with check execution engines like Sensu &
Nagios, and ships a well documented API for restart-less
configuration.

There are two problems in monitoring:
<ul>
<li>check configuration
<li>notification rules
<li>and a well known third one: check execution
</ul>

I would considder the configuring checks part more or less solved in
times of automated setups via Puppet or Chef.

Still there is the problem with notifications. Nobody wants to get
flooded with alerts and often the alerts that reach people are just
poorly chosen. Sometimes even the wrong people are chosen. Ops are
getting alerts that are only useful for devs and vice versa.  I've
observed that Devs and Ops are suffering from a lag of influence on
those notification rules configuration.

This hands on will give you an option to tackle this problem with the help
of flapjack and move away from Nagios to whatever you like more at the
same time.

**SESSION REQUIREMENTS AND INSTRUCTIONS FOR ATTENDEES**

You will get the most out of the tutorial if you’ve got Flapjack running
locally on your laptop beforehand. The simplest way to do this is to install
flapjack as per the <a href="http://flapjack.io/docs/1.0/usage/quickstart/">Quickstart</a>,
which involves installing <a href="https://www.virtualbox.org/">VirtualBox</a> 
and <a href="http://www.vagrantup.com/">Vagrant</a>, cloning 
<a href="https://github.com/flapjack/vagrant-flapjack">vagrant-flapjack</a> 
and running vagrant up within it.

There’s a bit to download with that, so it’s best to do this in your own time
before the conference.

You don’t need to have done the rest of the quickstart, though it can’t hurt.
The main thing is to have Flapjack running locally and to have Icinga or Nagios
sending it check execution results. This is all taken care of by the vagrant up
within <a href="https://github.com/flapjack/vagrant-flapjack">vagrant-flapjack</a>.

This information is also available on the Flapjack website, please visit it
again in the days leading up to the tutorial in case we’ve added anything else. 

Links:
<ul>
<li>Attendee Preparation – <a href="http://flapjack.io/docs/1.0/usage/Tutorial">http://flapjack.io/docs/1.0/usage/Tutorial</a>
<li>Flapjack Quickstart – <a href="http://flapjack.io/docs/1.0/usage/quickstart">http://flapjack.io/docs/1.0/usage/quickstart</a>
<li>VirtualBox – <a href="https://www.virtualbox.org">https://www.virtualbox.org</a>
<li>Vagrant – <a href="http://www.vagrantup.com">http://www.vagrantup.com</a>
<li>Vagrant-flapjack – <a href="https://github.com/flapjack/vagrant-flapjack">https://github.com/flapjack/vagrant-flapjack</a>
</ul>

**Speaker**

Birger Schmidt, Bulletproof

Birger Schmidt graduated at the Rostock University and the Humboldt
University of Berlin in computer science. Since the beginning of the
90s he has been dealing with IT infrastructure, operations and
development. From 2008 to 2012 he was senior consultant/trainer for
Nagios/Icinga, Puppet and RT/OTRS at <a
href="http://netways.de/en">NETWAYS (netways.de/en)</a>. Since 2012 he
works for <a href="http://bulletproof.net">Bulletproof
(bulletproof.net)</a> in Sydney and is in charge of the infrastructure
behind <a href="http://movember.com">Movember (movember.com)</a>.
